{"version":3,"sources":["tree_sheets/db.cljs"],"mappings":";AAIA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AA0DL,AAAKC,AAAK,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC;AAGX,AAACC,AAAAA,AAAAA,AAASF,AAAAA;AAEV,AAAA,AAAA,AAACG,AAAUH;AAAX,AACY,AAACI,AAAMC,AACA,AAAA,AAAAC,AAAA,AAACC,AAAQP","names":["tree-sheets.db/initial-db","tree-sheets.db/conn","datascript.core.create_conn","re-posh.core/connect!","cljs.core/add-watch","cljs.core.apply","js/console.log","cljs.core/deref","datascript.core.datoms"],"sourcesContent":["(ns tree-sheets.db\n  (:require [datascript.core :refer [create-conn datoms]]\n            [re-posh.core :refer [connect!]]))\n\n(def initial-db  \n  [{:db/id 1\n    :app/type :type/grid\n    ;; The root grid has parent -1\n    :grid/parent -1\n    :grid/rows [5 6 7 8]\n    :grid/cols [2 3 4]}\n\n   ;; Columns\n   {:db/id 2\n    :app/type :type/col\n    :col/width 55}\n   {:db/id 3\n    :app/type :type/col\n    :col/width 55}\n   {:db/id 4\n    :app/type :type/col\n    :col/width 55}\n\n   ;; Rows\n   {:db/id 5\n    :app/type :type/row}\n   {:db/id 6\n    :app/type :type/row}\n   {:db/id 7\n    :app/type :type/row}\n   {:db/id 8\n    :app/type :type/row}\n\n   ;; Cells\n   {:db/id 9\n    :app/type :type/cell\n    :cell/col 2\n    :cell/row 5\n    :cell/text \"Navigate with the arrow keys. Use the mouse to select cells or the borders between cells. Start typing while selecting the border between cells to insert a new cell\"}\n   {:db/id 10\n    :app/type :type/cell\n    :cell/col 3\n    :cell/row 8\n    :cell/text \"Shift-Enter to create a nested grid, or to select an existing one. Esc to select the encompassing cell.\"}\n   {:db/id 11\n    :app/type :type/cell\n    :cell/col 4\n    :cell/row 6\n    :cell/text \"Lots of missing features, of course. But it's a fun start.\"}\n\n   {:db/id 12\n    :app/type :type/grid\n    ;; The root grid has parent -1\n    :grid/parent 10\n    :grid/rows [13]\n    :grid/cols [14]}\n   {:db/id 13\n    :app/type :type/col\n    :col/width 55}\n   {:db/id 14\n    :app/type :type/row}])\n\n(def conn (create-conn {:grid/parent {:db/unique :db.unique/identity}\n                        :cell/col {:db/valueType :db.type/ref}\n                        :cell/row {:db/valueType :db.type/ref}}))\n(connect! conn)\n\n(add-watch conn :logger \n           #(apply js/console.log \n                   (datoms @conn :eavt)))"]}